{{- if .Values.certs.create }}
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    "helm.sh/hook": pre-install
    "helm.sh/hook-weight": "2"
    "helm.sh/hook-delete-policy": hook-succeeded,before-hook-creation
  name: {{ .Release.Name  }}-certs
  labels:
      app.kubernetes.io/instance: {{ .Release.Name }}
      app.kubernetes.io/component: "job"
  namespace: {{ .Release.Namespace }}
spec:
  activeDeadlineSeconds: {{ .Values.certs.activeDeadlineSeconds }}
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/component: "job"
{{- if .Values.certs.pod.annotations }}
      annotations:
{{ toYaml .Values.certs.pod.annotations | trim | indent 8 }}
{{- end }}
    spec:
      serviceAccountName: {{ .Release.Name }}-cert-sa
      {{- if .Values.certs.securityContext.enabled }}
      securityContext:
        runAsUser: {{ .Values.certs.securityContext.runAsUser }}
        fsGroup: {{ .Values.certs.securityContext.fsGroup }}
      {{- end }}
      nodeSelector:
{{ toYaml .Values.certs.pod.nodeSelector | indent 8 }}
{{- with .Values.certs.pod.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
{{- end }}
{{- with .Values.certs.pod.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
{{- end }}
      restartPolicy: OnFailure
      volumes:
        - name: init
          configMap:
            defaultMode: 493
            name: {{ .Release.Name }}-cert-config
{{- if and .Values.kubeconfig.enabled .Values.kubeconfig.secret}}
        - name: kubeconfig
          secret:
            secretName: {{ .Release.Name }}-kubeconfig  
{{- end }}
      containers:
      - name: main
        securityContext:
          privileged: true
        image: "{{ .Values.certs.image }}:{{ .Values.certs.imageTag }}"
        imagePullPolicy: {{ .Values.certs.imagePullPolicy }}
        env:
        - name: HOME
          value: /tmp 
        workingDir: /tmp   
        command:
        - '/bin/sh'
        - '-xc'
        - > 
          /init/on-start.sh --service {{ .Release.Name }}-controller --namespace {{ .Release.Namespace }}  --secret mutatingwebhook
        volumeMounts:
          - name: init
            mountPath: /init
{{- if .Values.kubeconfig.enabled }}            
          - name: kubeconfig
            mountPath: /root/.kube
            readOnly: true  
{{- end }}
{{- end }}
--- 

apiVersion: v1
kind: ConfigMap
metadata:
  annotations:
    "helm.sh/hook": pre-install
    "helm.sh/hook-weight": "1"
  name: {{ .Release.Name }}-cert-config
  namespace: {{ .Release.Namespace }}
{{ include "carina-node.labels" . | indent 2 }}
data:
  on-start.sh: |
{{ .Files.Get "init/gen_webhookca.sh" | indent 4 }}


name: CI

on:
  pull_request:
    branches:
      - "*"

  push:
    branches:
      - main

jobs:
  build:
    name: Build
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up Go 1.20
        id: go
        uses: actions/setup-go@v2
        with:
          go-version: 1.20.4
      - name: Set up Docker Buildx
        id: buildx
        uses: crazy-max/ghaction-docker-buildx@v1
        with:
          buildx-version: latest
          qemu-version: latest
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Available platforms
        run: echo ${{ steps.buildx.outputs.platforms }}
      - name: Build images
        run: |
          set -x
          git fetch origin
          tag="$(git describe --tags)"

          echo "building images..."
          go mod vendor
          echo "docker build -t ghcr.io/kilnfi/carina:controller-${tag} . "
          docker build -t "ghcr.io/kilnfi/carina:controller-${tag}" .

          cd scheduler
          go mod vendor
          echo "docker build -t ghcr.io/kilnfi/carina:scheduler-${tag} ."
          docker build -t "ghcr.io/kilnfi/carina:scheduler-${tag}" .
      - name: Push image
        if: github.ref == 'refs/heads/main' && (github.event_name == 'push' || github.event_name == 'workflow_dispatch')
        run: |
          set -x
          git fetch origin
          tag="$(git describe --tags)"

          docker push "ghcr.io/kilnfi/carina:controller-${tag}"
          docker push "ghcr.io/kilnfi/carina:scheduler-${tag}"

  helm:
    name: Helm chart
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Install Helm
        uses: azure/setup-helm@v3
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Push chart
        if: github.ref == 'refs/heads/main' && (github.event_name == 'push' || github.event_name == 'workflow_dispatch')
        run: |
          set -x
          git fetch origin
          tag="$(git describe --tags)"

          sed -e 's/^name: carina-csi-driver/name: carina/' charts/Chart.yaml
          helm package charts --version "${tag}"
          HELM_EXPERIMENTAL_OCI=1 helm push "carina-${tag}.tgz" "oci://ghcr.io/kilnfi"

# TODO testing
# K3D_FIX_MOUNTS=1 k3d cluster create -i rancher/k3s:v1.25.7-k3s1 test
# k3d kubeconfig get test > test
# export KUBECONFIG=$(pwd)/test
# HELM_EXPERIMENTAL_OCI=1 helm upgrade --install -n carina carina-csi-driver charts/ -f kiln-values.yaml

# Values
#carina-scheduler:
#  enabled: true
#  image:
#    repository: ghcr.io/kilnfi/carina
#    tag: "scheduler-v0.12.0-13-g9f990a6"
#image:
#  carina:
#    repository: ghcr.io/kilnfi/carina
#    tag: "controller-v0.12.0-13-g9f990a6"
#  livenessProbe:
#    repository: registry.k8s.io/sig-storage/livenessprobe
#    tag: "v2.7.0"
#  csiProvisioner:
#    repository: registry.k8s.io/sig-storage/csi-provisioner
#    tag: "v2.2.2"
#  csiResizer:
#    repository: registry.k8s.io/sig-storage/csi-resizer
#    tag: "v1.5.0"
#  nodeDriverRegistrar:
#    repository: registry.k8s.io/sig-storage/csi-node-driver-registrar
#    tag: "v2.5.1"
#  nodeInitImage:
#    repository: busybox
#    tag: "1.28"
#
